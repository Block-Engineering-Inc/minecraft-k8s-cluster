apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-07-04T19:43:51Z"
  generation: 2
  labels:
    app: teste
  name: teste
  namespace: mc-server
  resourceVersion: "1854794"
  selfLink: /apis/apps/v1/namespaces/mc-server/deployments/teste
  uid: afc1f515-be2e-11ea-9b38-42010a9e0064
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: teste
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: teste
    spec:
      containers:
      - env:
        - name: EULA
          valueFrom:
            configMapKeyRef:
              key: EULA
              name: teste-config-bodm
        image: gcr.io/nice-mix-249319/itzg/minecraft-server@sha256:3bba73c5d924971a7f85a16e82d9ae6a4f7a9ef09e206c19b8da54a5a63d8d2c
        imagePullPolicy: IfNotPresent
        name: minecraft-server-sha256-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2020-07-04T19:43:51Z"
    lastUpdateTime: "2020-07-04T19:43:54Z"
    message: ReplicaSet "teste-57775cd466" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-07-04T19:51:13Z"
    lastUpdateTime: "2020-07-04T19:51:13Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 2
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
